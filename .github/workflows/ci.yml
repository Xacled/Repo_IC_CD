name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build y test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Limpiar caché y módulos previos
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json

      - name: Instalar dependencias
        run: npm install

      - name: Test
        run: npm run test --if-present --coverage

      - name: Build
        run: npm run build

      - name: Subir a GitHub Pages (artefacto)
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: ./dist

      - name: Notificar a Slack
        if: failure() || success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":rocket: *CI/CD completado*\n*Status:* ${{ job.status }}\n*Repositorio:* ${{ github.repository }}\n*Commit:* ${{ github.sha }}\n*Autor:* ${{ github.actor }}",
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && 'good' || 'danger' }}"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy-render:
    name: Desplegar en Render
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Instalar dependencias
        run: npm install

      - name: Build para Render
        run: npm run build

      - name: Instalar Render CLI
        run: npm install -g @render/cli

      - name: Desplegar a Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render deploy --service-id srv-d0vs4qfdiees73f695r0 --wait-for-completion

  #No funcion azure :c
  # deploy:
  #   name: Desplegar en GitHub Pages
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: ./dist

  #     - name: Deploy con GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
  # (Tu workflow original arriba)