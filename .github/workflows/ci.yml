name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build y test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # Limpieza para evitar error con rollup y npm
      - name: Limpiar caché y módulos previos
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -f package-lock.json

      #instalo dependencias
      - run: npm install

      #ejecuto las pruebas si existen
      - run: npm run test --if-present

      #realizo el build
      - run: npm run build

      - name: Subir a GitHub Pages (artefacto)
        uses: actions/upload-artifact@v4
        with:
          path: ./dist

  #No funcion azure :c
  deploy:
    name: Desplegar en GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy con GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
        notify:
          name: Notificar a Slack

          needs: build
          runs-on: ubuntu-latest
          if: ${{ needs.build.result == 'success' }}

          steps:
            - name: Notificar a Slack
              uses: slackapi/slack-github-action@v1.24.0
              with:
                payload: |
                  {
                    "text": ":rocket: *CI/CD completado*\n*Status:* ${{ needs.build.result }}\n*Repositorio:* ${{ github.repository }}\n*Commit:* ${{ github.sha }}\n*Autor:* ${{ github.actor }}",
                    "attachments": [
                      {
                        "color": "${{ needs.build.result == 'success' && 'good' || 'danger' }}"
                      }
                    ]
                  }
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
