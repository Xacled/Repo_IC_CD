name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Instalar Bun
        uses: oven-sh/setup-bun@v1

      - name: Limpiar cachÃ© y mÃ³dulos previos
        run: |
          rm -rf node_modules bun.lockb

      - name: Instalar dependencias
        run: bun install

      - name: Test
        id: test
        run: bun run test --if-present --coverage

      - name: Notificar a Slack (Test)
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
             {
               "text": ":test_tube: *CI/CD - Fallo en Pruebas*\n\nðŸ“¦ Repositorio: ${{ github.repository }}\nðŸ‘¤ Autor: ${{ github.actor }}\nðŸ”¢ Commit: ${{ github.sha }}\nðŸ“Š Estado del Test: Fallido"
             }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Instalar Bun
        uses: oven-sh/setup-bun@v1

      - name: Instalar dependencias
        run: bun install

      - name: Build
        id: build
        run: bun run build

      - name: Notificar a Slack (Build)
        if: success() || failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
             {
               "text": ":rocket: *CI/CD - Build completado con Ã©xito*\n\nðŸ“¦ Repositorio: ${{ github.repository }}\nðŸ‘¤ Autor: ${{ github.actor }}\nðŸ”¢ Commit: ${{ github.sha }}\nðŸ“Š Estado del build: ${{ job.status }}"
             }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
